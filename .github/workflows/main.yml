# Gitlab CI automation

name: CI mirroring

# Controls when the action will run. 
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*'
  pull_request:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  '30 2 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    #runs-on: ubuntu-latest
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
          
      - name: Import environment variables from a file
        id: import-env
        shell: bash
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$SECUREFLOW_SECRET_GITHUB_KEY" --output ./.github/workflows/secret.env ./.github/workflows/secret.env.pgp
          while read line; do
            echo "$line" >> $GITHUB_ENV
          done < ./.github/workflows/secret.env
        env:
          SECUREFLOW_SECRET_GITHUB_KEY: ${{ secrets.SECUREFLOW_SECRET_GITHUB_KEY }}

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV
        
      - name: github-sync and wait for gitlab pipeline
        shell: bash
        run: |
          chmod +x .github/workflows/github-sync.sh
          ./.github/workflows/github-sync.sh
        env:
          SRC_REPO: ${{ env.SRC_REPO }}
          DST_REPO: ${{ env.DST_REPO }}
          SRC_REPO_TOKEN_USER: ${{ env.SRC_REPO_TOKEN_USER }}
          DST_REPO_TOKEN_USER: ${{ env.DST_REPO_TOKEN_USER }}
          SRC_REPO_TOKEN: ${{ env.SRC_REPO_TOKEN }}
          DST_REPO_TOKEN: ${{ env.DST_REPO_TOKEN }}
