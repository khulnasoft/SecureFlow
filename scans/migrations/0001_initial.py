# Generated by Django 2.2.5 on 2019-09-17 23:07

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('engines', '0001_initial'),
        ('assets', '0001_initial'),
        ('django_celery_beat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScanDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_type', models.CharField(choices=[('single', 'single'), ('periodic', 'periodic'), ('scheduled', 'scheduled')], default='single', max_length=10)),
                ('title', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=256)),
                ('every', models.IntegerField(blank=True, null=True)),
                ('period', models.CharField(blank=True, choices=[('days', 'Days'), ('hours', 'Hours'), ('minutes', 'Minutes'), ('seconds', 'Seconds')], default='hours', max_length=10, null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('timeout_delay', models.IntegerField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('expire_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('assetgroups_list', models.ManyToManyField(blank=True, to='assets.AssetGroup')),
                ('assets_list', models.ManyToManyField(blank=True, to='assets.Asset')),
                ('engine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='engines.EngineInstance')),
                ('engine_policy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='engines.EnginePolicy')),
                ('engine_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='engines.Engine')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('periodic_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.PeriodicTask')),
            ],
            options={
                'db_table': 'scan_definitions',
            },
        ),
        migrations.CreateModel(
            name='ScanCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=256)),
                ('enabled', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=20)),
                ('timeout_delay', models.IntegerField(blank=True, null=True)),
                ('report_filepath', models.CharField(blank=True, max_length=256, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('expire_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('scan_def_list', models.ManyToManyField(to='scans.ScanDefinition')),
            ],
            options={
                'db_table': 'scan_campaigns',
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_settings', models.CharField(blank=True, max_length=256, null=True)),
                ('task_id', models.UUIDField(blank=True, null=True)),
                ('title', models.CharField(max_length=256)),
                ('status', models.CharField(max_length=20)),
                ('summary', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('timeout_delay', models.IntegerField(blank=True, null=True)),
                ('report_filepath', models.CharField(blank=True, max_length=256, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('assets', models.ManyToManyField(to='assets.Asset')),
                ('engine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='engines.EngineInstance')),
                ('engine_policy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='engines.EnginePolicy')),
                ('engine_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='engines.Engine')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('scan_definition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='scans.ScanDefinition')),
            ],
            options={
                'db_table': 'scans',
            },
        ),
    ]
